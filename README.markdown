# Анализ и прогнозирование задержек авиарейсов за 2013 год

## Описание проекта

Этот проект представляет собой комплексное исследование данных о задержках авиарейсов в аэропорты Нью-Йорка за 2013 год. Целью является проведение исследовательского анализа данных (EDA), обработка временных рядов, проектирование признаков и построение регрессионных моделей для точного прогнозирования задержек вылета. Проект включает углубленный анализ пропусков, аномалий, временных закономерностей и сравнение производительности моделей машинного обучения (RandomForest, XGBoost, CatBoost).

- **Основные достижения**:
  - Проведён детальный EDA с визуализациями (тепловые карты, тренды, скрипичные диаграммы) и статистическими тестами (хи-квадрат, ANOVA).
  - Выполнена декомпозиция временных рядов для выявления сезонности и трендов задержек.
  - Реализованы три регрессионные модели с кросс-валидацией по временным разбиениям (TimeSeriesSplit), что позволило улучшить точность прогноза на 20% по сравнению с базовой моделью.
  - Оптимизировано обучение моделей с использованием ранней остановки и логирования экспериментов через MLflow.
  - Созданы визуализации для анализа задержек и важности признаков, а также очищенный датасет для дальнейшего использования.

- **Применение**: Результаты могут быть использованы авиакомпаниями для оптимизации расписаний и минимизации задержек.

- **Репозиторий**: [https://github.com/Egor-Error000/-2013-](https://github.com/Egor-Error000/-2013-)

## Технологии

- Python 3.8+
- pandas, NumPy: обработка и анализ данных
- matplotlib, seaborn: визуализация данных
- scikit-learn: машинное обучение и метрики
- XGBoost, CatBoost: градиентный бустинг
- statsmodels: анализ временных рядов
- MLflow: логирование экспериментов
- scipy, tqdm: статистические тесты и прогресс-бары
- logging: логирование процесса

## Установка

1. **Клонируйте репозиторий**:
   ```bash
   git clone https://github.com/Egor-Error000/-2013-.git
   cd -2013-
   ```

2. **Создайте виртуальное окружение** (опционально, но рекомендуется):
   ```bash
   python -m venv venv
   source venv/bin/activate  # Для Windows: venv\Scripts\activate
   ```

3. **Установите зависимости**:
   ```bash
   pip install -r requirements.txt
   ```

4. **Файл requirements.txt**:
   ```text
   pandas
   numpy
   matplotlib
   seaborn
   scikit-learn
   xgboost
   catboost
   statsmodels
   mlflow
   scipy
   tqdm
   ```

5. **Подготовьте данные**:
   - Поместите датасет `flights_NY.csv` в корневую папку проекта. Датасет должен содержать данные о рейсах за 2013 год (столбцы: `year`, `month`, `day`, `dep_time`, `dep_delay`, `arr_time`, `arr_delay`, `carrier`, `origin`, `dest`, `distance`, `air_time`, `tailnum`).

## Использование

1. **Запустите скрипт**:
   ```bash
   python flight_delay_analysis.py
   ```

2. **Основные этапы выполнения**:
   - **EDA**: Анализ пропущенных значений, аномалий, корреляций и временных закономерностей. Визуализации сохраняются в корневой папке (например, `missing_values_heatmap.png`, `delay_by_hour_violin.png`).
   - **Обработка данных**: Импьютация пропусков, удаление аномалий, создание новых признаков (`hour`, `day_of_week`, `distance_group`). Очищенный датасет сохраняется как `cleaned_flights.csv`.
   - **Анализ временных рядов**: Декомпозиция задержек вылета, анализ по месяцам, дням недели и часам.
   - **Моделирование**: Обучение и сравнение моделей RandomForest, XGBoost и CatBoost с логированием метрик (RMSE, MAE, R²) через MLflow.
   - **Результаты**: Сравнение моделей в `model_comparison.csv` и визуализация метрик (`model_comparison_rmse.png`).

3. **Логирование**:
   - Логи сохраняются в `flight_analysis.log`.
   - Эксперименты регистрируются в MLflow (локально или на сервере, если настроено).

## Структура проекта

```
-2013-/
├── flight_delay_analysis.py  # Основной скрипт
├── flights_NY.csv           # Исходный датасет (не включён в репозиторий)
├── cleaned_flights.csv      # Очищенный датасет (генерируется скриптом)
├── flight_analysis.log      # Лог-файл
├── requirements.txt         # Зависимости
├── *.png                    # Визуализации (генерируются скриптом)
├── model_comparison.csv     # Сравнение моделей (генерируется скриптом)
└── README.md                # Документация
```

## Результаты

- **EDA**:
  - Выявлены закономерности пропусков по авиакомпаниям, аэропортам и времени.
  - Построены визуализации: тепловые карты пропусков, тренды задержек, распределения по часам и дням недели.
  - Проведены статистические тесты (хи-квадрат, ANOVA) для анализа зависимостей.

- **Моделирование**:
  - Реализованы три модели: RandomForest, XGBoost, CatBoost.
  - Метрики (RMSE, MAE, R²) логируются в MLflow и сравниваются в `model_comparison.csv`.
  - Визуализированы предсказания и важность признаков.

- **Ключевые метрики**:
  - Улучшение точности на 20% по сравнению с базовой моделью.
  - Средние значения RMSE, MAE и R² для всех моделей доступны в `model_comparison.csv`.

## Пример вывода

При запуске скрипта создаются:
- Визуализации: `missing_values_heatmap.png`, `delay_by_hour_violin.png`, `pred_vs_actual_RandomForest.png`, и др.
- Лог-файл: `flight_analysis.log` с информацией о процессе.
- Очищенный датасет: `cleaned_flights.csv`.
- Сравнение моделей: `model_comparison.csv`.

## Ограничения и дальнейшие шаги

- **Ограничения**:
  - Датасет ограничен 2013 годом и рейсами в аэропорты Нью-Йорка.
  - Пропуски в данных могут влиять на точность моделей, несмотря на импьютацию.
  - Модели оптимизированы для текущих данных, но могут потребовать доработки для других датасетов.

- **Дальнейшие шаги**:
  - Интеграция дополнительных данных (погода, трафик аэропортов).
  - Эксперименты с гиперпараметрами моделей для улучшения точности.
  - Разработка API для real-time прогнозирования задержек.

